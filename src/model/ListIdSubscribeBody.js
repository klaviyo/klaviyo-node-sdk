/*
 * Klaviyo API
 * Empowering creators to own their destiny
 *
 * OpenAPI spec version: 2021.11.26
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The ListIdSubscribeBody model module.
 * @module model/ListIdSubscribeBody
 * @version 2021.11.26
 */
export class ListIdSubscribeBody {
  /**
   * Constructs a new <code>ListIdSubscribeBody</code>.
   * The profiles that you would like to subscribe. Each object in the list must have either an email or phone number key. You can also provide additional properties as key-value pairs. If you are a GDPR compliant business, you will need to include &#x60;$consent&#x60; in your API call. &#x60;$consent&#x60; is a list-type, Klaviyo special property and only accepts some subset of the following: &#x60;[\&quot;email\&quot;, \&quot;web\&quot;, \&quot;sms\&quot;, \&quot;directmail\&quot;, \&quot;mobile\&quot;]&#x60;. If you are updating consent for a phone number or would like to send an opt-in SMS to the profile (for double opt-in lists), include an &#x60;sms_consent&#x60; key in the profile with a value of &#x60;true&#x60; or &#x60;false&#x60;.
   * @alias module:model/ListIdSubscribeBody
   * @class
   * @param profiles {Array.<Object.<String, Object>>} 
   */
  constructor(profiles) {
    this.profiles = profiles;
  }

  /**
   * Constructs a <code>ListIdSubscribeBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ListIdSubscribeBody} obj Optional instance to populate.
   * @return {module:model/ListIdSubscribeBody} The populated <code>ListIdSubscribeBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ListIdSubscribeBody();
      if (data.hasOwnProperty('profiles'))
        obj.profiles = ApiClient.convertToType(data['profiles'], [{'String': Object}]);
    }
    return obj;
  }
}

/**
 * @member {Array.<Object.<String, Object>>} profiles
 */
ListIdSubscribeBody.prototype.profiles = undefined;

