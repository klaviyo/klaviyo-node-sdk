/*
 * Klaviyo API
 * Empowering creators to own their destiny
 *
 * OpenAPI spec version: 2021.11.26
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient.js';

/**
 * The TemplateIdRenderBody model module.
 * @module model/TemplateIdRenderBody
 * @version 2021.11.26
 */
export class TemplateIdRenderBody {
  /**
   * Constructs a new <code>TemplateIdRenderBody</code>.
   * @alias module:model/TemplateIdRenderBody
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TemplateIdRenderBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TemplateIdRenderBody} obj Optional instance to populate.
   * @return {module:model/TemplateIdRenderBody} The populated <code>TemplateIdRenderBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TemplateIdRenderBody();
      if (data.hasOwnProperty('context'))
        obj.context = ApiClient.convertToType(data['context'], 'String');
    }
    return obj;
  }
}

/**
 * This is the context your email template will be rendered with. Email templates are rendered with contexts in a similar manner to how Django templates are rendered. This means that nested template variables can be referenced via dot notation and template variables without corresponding context values are treated as falsy and output nothing.
 * @member {String} context
 * @default '{ "name" : "George Washington", "state" : "VA" }'
 */
TemplateIdRenderBody.prototype.context = '{ "name" : "George Washington", "state" : "VA" }';

